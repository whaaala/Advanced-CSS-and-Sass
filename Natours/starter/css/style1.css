/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
/*
//////////////////////////////////////////////////////////////////////////
            /*********** GOLBAL RESET ************/
/*///////////////////////////////////////////////////////////////////////
*/

/* A global Reset for margin and padding, box-sizing  */
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box; /* this changes the box model, so that the borders and the paddings are NO longer added to the Total Width OR the Total Height that we specify for a BOX */
}

html{
    font-size: 62.5%;
}

/* All Properties in this CSS Rule will get Inherited by all the Child Elements in the body Element */
body{
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 1.6rem;
    line-height: 1.7;
    color: #777;
    padding: 3rem
}

/*///////////////////////////////////////////////////////////////////////////////*/

/*
//////////////////////////////////////////////////////////////////////////
            /*********** HEADER SECTION ************/
/*///////////////////////////////////////////////////////////////////////
*/

.header{
    height: 95vh; /* the Height of the header Element should be 95% of the Viewport Screen*/

    /* background-image: url(../img/hero.jpg) ; this is used to set the background image */

    background-size: cover; /* this makes sure the background image is fitted in the ELlement width size*/

    background-position: top; /* this ensures that the background image Top, ALWAYS stays at the top of the container Element, No matter the Viewport Size (the image will not ber Cropped out at the top)*/

    background-image: linear-gradient(to right bottom,rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg); /* this is used to specfiy the grradient on a background Image*/

    /* clip-path: polygon(x y, x y, x y, x y); */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); 

    position: relative;
}

.header__logo-box{
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.header__logo{
    height: 3.5rem;
}

.header__text-box{
    position: absolute;
    top: 40%; /* this is 50% from the Top of the Parent Element */
    left: 50%; /* this si 50% from the Left of the Parent Element */
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary{
    color: #fff;
    text-transform: uppercase;

    backface-visibility: hidden; /* this determines if the back part of an Element, when its transformed is visible or hidden for the user*/
    margin-bottom: 6rem;
}

.heading-primary--main{
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    animation-name: moveInLeft;
    animation-duration: 1.5s;
    animation-timing-function: ease-out;


    /* 
    animation-delay: 3s; 
    animation-iteration-count: 3;
    */

}

.heading-primary--sub{
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;

    animation:  moveInRight 1.5s ease-out;

    /* animation-name: moveInRight;
    animation-duration: 1.5s;
    animation-timing-function: ease-out; */
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem); /*this is to translate the Element in the X-axis direction */
    }


    80% {
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0); /*this is to translate the Element to its original position */
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem); /*this is to translate the Element in the X-axis direction */
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0); /*this is to translate the Element to its original position */
    }
}


@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem); /*this is to translate the Element in the Y-axis direction from TOP to Bottom*/
    }

    100% {
        opacity: 1;
        transform: translat(0); /*this is to translate the Element to its original position */
    }
}

.btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all 0.3s;

    position: relative;
    font-size: 1.6rem;
}

.btn:hover {
    transform: translateY(-0.3rem); /* a Negative value is used to Move up  on the Y-axis */
    box-shadow: 0 1rem 2rem rgba(0,0,0,.2); /* X Y BLUR COLOLR and Tansparency*/
}

.btn:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba(0,0,0,.2);
}

.btn--white{
    background-color: #fff;
    color: #777;
}

.btn::after{
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;  

    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;

    transition: all 0.4s; /*animation for the btn:hover::after effect*/
}

.btn--white::after{
    background-color: #fff;
}

.btn:hover::after{
    transform: scaleX(1.5) scaleY(1.6);
    opacity: 0; /* opacity: 0; set an Element to invisible, which give this the FADE out Effect*/
}

.btn--animated{
    animation:  moveInBottom 0.9s ease-out 0.75s;
    animation-fill-mode: backwards; /* this is used to apply the 0% property Rules before the animation start -->
        this is done in other to make sure the Element is not visible on the page, before the animantion starts*/
}